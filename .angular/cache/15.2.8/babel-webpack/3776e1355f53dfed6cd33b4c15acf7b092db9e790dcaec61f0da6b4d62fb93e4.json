{"ast":null,"code":"import { collectionData } from '@angular/fire/firestore';\nimport { collection, addDoc, doc, deleteDoc } from '@angular/fire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport let ReservacionesService = /*#__PURE__*/(() => {\n  class ReservacionesService {\n    constructor(firestore) {\n      this.firestore = firestore;\n      this.reservaciones = [];\n    }\n    //Metodos de Firestore\n    anadirReservacion(reservacion, casa) {\n      const reservacionesRef = collection(this.firestore, casa);\n      return addDoc(reservacionesRef, reservacion);\n    }\n    obtenerReservaciones(casa) {\n      const reservacionesRef = collection(this.firestore, casa);\n      return collectionData(reservacionesRef, {\n        idField: 'id'\n      });\n    }\n    borrarReservacion(reservacion, casa) {\n      const reservacionRef = doc(this.firestore, `${casa}/${reservacion.id}`);\n      return deleteDoc(reservacionRef);\n    }\n    fechasOcupadas(casa) {\n      let fechas = [];\n      this.obtenerReservaciones(casa).subscribe(resrvs => {\n        console.log(resrvs);\n        this.reservaciones = resrvs;\n      });\n      if (this.reservaciones != null) {\n        for (let i of this.reservaciones) {\n          let checkin = new Date(i.checkin);\n          while (checkin <= i.checkout) {\n            fechas.push(new Date(checkin));\n            checkin.setDate(checkin.getDate() + 1);\n          }\n        }\n      }\n      return fechas;\n    }\n  }\n  ReservacionesService.ɵfac = function ReservacionesService_Factory(t) {\n    return new (t || ReservacionesService)(i0.ɵɵinject(i1.Firestore));\n  };\n  ReservacionesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReservacionesService,\n    factory: ReservacionesService.ɵfac,\n    providedIn: 'root'\n  });\n  return ReservacionesService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}